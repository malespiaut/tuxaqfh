# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# src/


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@

bindir = $(prefix)/games

bin_PROGRAMS = tux_aqfh

tux_aqfh_SOURCES =         camera.cxx components.cxx fade_out.cxx feature.cxx        gfx.cxx globalstate.cxx gui.cxx hooks.cxx score.cxx        isect.cxx level.cxx material.cxx ocean.cxx        orca.cxx penguin.cxx rocket.cxx        sound.cxx starwing.cxx status.cxx        surf_rev.cxx tux.cxx tuxstate.cxx whale.cxx        slamRun.cxx slamCodeGen.cxx slamExpression.cxx slam.cxx        slamStatement.cxx slamSymbols.cxx slamToken.cxx        camera.h components.h fade_out.h feature.h        gfx.h globalstate.h gui.h hooks.h        isect.h joystick.h level.h material.h        ocean.h orca.h penguin.h rocket.h        sound.h starwing.h status.h        tux.h tuxstate.h whale.h slam.h

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
tux_aqfh_OBJECTS =  camera.o components.o fade_out.o feature.o gfx.o \
globalstate.o gui.o hooks.o score.o isect.o level.o material.o ocean.o \
orca.o penguin.o rocket.o sound.o starwing.o status.o surf_rev.o tux.o \
tuxstate.o whale.o slamRun.o slamCodeGen.o slamExpression.o slam.o \
slamStatement.o slamSymbols.o slamToken.o
tux_aqfh_LDADD = $(LDADD)
tux_aqfh_DEPENDENCIES = 
tux_aqfh_LDFLAGS = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(tux_aqfh_SOURCES)
OBJECTS = $(tux_aqfh_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cxx .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

tux_aqfh: $(tux_aqfh_OBJECTS) $(tux_aqfh_DEPENDENCIES)
	@rm -f tux_aqfh
	$(CXXLINK) $(tux_aqfh_LDFLAGS) $(tux_aqfh_OBJECTS) $(tux_aqfh_LDADD) $(LIBS)
.cxx.o:
	$(CXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
camera.o: camera.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
components.o: components.cxx penguin.h components.h
fade_out.o: fade_out.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
feature.o: feature.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
gfx.o: gfx.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
globalstate.o: globalstate.cxx tux.h slam.h joystick.h material.h \
	ocean.h isect.h feature.h penguin.h components.h rocket.h \
	orca.h sound.h status.h camera.h level.h globalstate.h \
	tuxstate.h whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
gui.o: gui.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
hooks.o: hooks.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
isect.o: isect.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
level.o: level.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
material.o: material.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
ocean.o: ocean.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
orca.o: orca.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
penguin.o: penguin.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
rocket.o: rocket.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
score.o: score.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
slam.o: slam.cxx slam.h
slamCodeGen.o: slamCodeGen.cxx slam.h
slamExpression.o: slamExpression.cxx slam.h
slamRun.o: slamRun.cxx slam.h
slamStatement.o: slamStatement.cxx slam.h
slamSymbols.o: slamSymbols.cxx slam.h
slamToken.o: slamToken.cxx slam.h
slide.o: slide.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h slide.h fade_out.h starwing.h hooks.h
slide_data.o: slide_data.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h slide.h fade_out.h starwing.h hooks.h
sound.o: sound.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
starwing.o: starwing.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
status.o: status.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
surf_rev.o: surf_rev.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
tux.o: tux.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h
tuxstate.o: tuxstate.cxx tux.h slam.h joystick.h material.h ocean.h \
	isect.h feature.h penguin.h components.h rocket.h orca.h \
	sound.h status.h camera.h level.h globalstate.h tuxstate.h \
	whale.h gui.h gfx.h fade_out.h starwing.h hooks.h
whale.o: whale.cxx tux.h slam.h joystick.h material.h ocean.h isect.h \
	feature.h penguin.h components.h rocket.h orca.h sound.h \
	status.h camera.h level.h globalstate.h tuxstate.h whale.h \
	gui.h gfx.h fade_out.h starwing.h hooks.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
